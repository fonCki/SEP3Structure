@using Entities.Model
@using Contracts.Services
@using BlazorApp.Authentication

@inject IAuthService AuthService
@inject IMessageService MessageService

<main class="main">
    @if (_messages != null) {
        foreach (var message in _messages) {
            <div class="@(AuthService.MyUser.Email.Equals(message.Header.CreatedBy.Email) ? "mine" : "not-mine")">
                <PlainMessage Message="message" IsMine=@AuthService.MyUser.Email.Equals(message.Header.CreatedBy.Email)></PlainMessage>
            </div>
        }
    }
</main>

@code {
    [CascadingParameter]
    public User Receipe { get; set; }
    
    ICollection<Message>? _messages;

    protected override async Task OnInitializedAsync() {
        User myself = AuthService.MyUser;
        _messages = await MessageService.GetRelatedMessages(AuthService.MyUser, Receipe);
    }
}